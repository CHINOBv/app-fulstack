{"version":3,"sources":["components/layaut/Header.jsx","querys/index.js","mutations/index.js","components/layaut/Paginador.jsx","components/alertas/Exito.jsx","components/layaut/Spiner.jsx","components/clientes/Clientes.jsx","components/clientes/FormEditClient.jsx","components/clientes/EditCliente.jsx","components/clientes/NuevoCliente.jsx","components/productos/NuevoProducto.jsx","components/productos/Productos.jsx","components/productos/FormEditProducts.jsx","components/productos/EditProducto.jsx","components/pedidos/DatosCliente.jsx","components/pedidos/Producto.jsx","components/pedidos/Resumen.jsx","components/pedidos/ContentPedidos.jsx","components/pedidos/NuevoPedido.jsx","components/Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-labelledby","CLIENTES_QUERY","gql","CLIENTE_QUERY","PRODUCTOS_QUERY","PRODUCTO_QUERY","NUEVO_CLIENTE","ACTUALIZAR_CLIENTE","ELIMINAR_CLIENTE","NUEVO_PRODUCTO","ELIMINAR_PRODUCTO","ACTUALIZAR_PRODUCTO","Paginador","state","paginador","paginas","Math","ceil","Number","props","total","limite","actual","this","btnAnterior","onClick","paginaAnt","btnSig","paginaSig","Component","Exito","mensaje","Spiner","React","Clientes","offset","alerta","mostrar","setState","query","pollInterval","variables","loading","error","data","startPolling","stopPolling","message","getClientes","map","item","key","nombre","apellido","empresa","mutation","onCompleted","eliminarCliente","window","confirm","totalClientes","FormEditClient","client","emails","nuevoCampo","concat","email","leerCampo","i","e","nuevoMail","index","target","value","quitarCampo","filter","s","edad","tipo","refetch","then","history","push","actualizarCliente","onSubmit","preventDefault","input","defaultValue","onChange","placeholder","withRouter","EditCliente","match","params","getCliente","NuevoCliente","cliente","NewCamp","DelCamp","ReadCamp","NewEmail","res","crearCliente","trim","initialState","precio","stock","NuevoProducto","cleanState","actualizarState","name","validForm","crearProducto","autoComplete","disabled","Productos","console","log","scope","getProductos","eliminarProducto","totalProductos","FormEditProducts","getProducto","editarProductoForm","actualizarProducto","EditProducto","DatosCliente","tabIndex","role","aria-hidden","data-dismiss","Producto","producto","actualizarCant","Resumen","productos","length","ContentPedidos","products","selectProducto","cant","op","datas","options","isMulti","components","makeAnimated","getOptionValue","getOptionLabel","NuevoPedido","Routes","exact","path","component","ApolloClient","uri","cache","InMemoryCache","addTypename","onError","networkError","graphQLErrors","App","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.14d060a7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between d-flex mb-4\">\n    <div className=\"container\">\n      <Link to=\"/\" className=\"navbar-brand text-light font-weight-bold\">\n        CRM\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navegacion\"\n        aria-controls=\"navegacion\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navegacion\">\n        <ul className=\"navbar-nav ml-auto text-right\">\n          <li className=\"nav-item dropdown mr-md-2 mb-2 mb-md-0\">\n            <button\n              className=\"nav-link dropdown-toggle btn btn-block btn-success\"\n              data-toggle=\"dropdown\"\n            >Clientes</button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navegacion\">\n              <Link to=\"/clientes\" className=\"dropdown-item\"> Ver Clientes </Link>\n              <Link to=\"/clientes/nuevo\" className=\"dropdown-item\"> Nuevo Cliente </Link>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown\">\n            <button\n              className=\"nav-link dropdown-toggle btn btn-block btn-success\"\n              data-toggle=\"dropdown\"\n            >Productos</button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navegacion\">\n              <Link to=\"/productos\" className=\"dropdown-item\"> Ver Productos </Link>\n              <Link to=\"/productos/nuevo\" className=\"dropdown-item\"> Nuevo Producto </Link>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import gql from \"graphql-tag\";\nexport const CLIENTES_QUERY = gql`\n  \n    query getClientes ($limite: Int, $offset: Int) {\n      getClientes(limite: $limite, offset: $offset){\n        id\n        nombre\n        apellido\n        empresa\n      }\n      totalClientes  \n  }\n`;\n\nexport const CLIENTE_QUERY = gql`\n  query ConsultarCliente($id: ID) {\n    getCliente(id: $id) {\n      id\n      nombre\n      apellido\n      emails{\n        email\n      }\n      edad\n      tipo\n      empresa\n    }\n  }\n`;\n\nexport const PRODUCTOS_QUERY = gql`\n\n  query getProductos($limite: Int, $offset: Int){\n    getProductos(limite: $limite, offset: $offset){\n      id\n      nombre\n      precio\n      stock\n    }\n    totalProductos\n}\n`;\n\nexport const PRODUCTO_QUERY = gql`\n\n  query getProducto ($id: ID){\n    getProducto(id: $id){\n      id\n      nombre\n      precio\n      stock\n    }\n  }\n\n`;\n","import gql from \"graphql-tag\";\n\nexport const NUEVO_CLIENTE = gql`\n  mutation crearCliente($input: ClienteInput) {\n    crearCliente(input: $input) {\n      id\n      nombre\n      apellido\n    }\n  }\n`;\n\nexport const ACTUALIZAR_CLIENTE = gql`\n\nmutation actualizarCliente($input: ClienteInput){\n  actualizarCliente(input: $input){\n    id\n    nombre\n    apellido\n    edad\n    empresa\n    emails{\n      email\n    }\n    tipo\n  }\n}\n\n`;\nexport const ELIMINAR_CLIENTE = gql`\n\nmutation eliminarCliente($id:ID!){\n  eliminarCliente(id:$id)\n}\n\n`;\nexport const NUEVO_PRODUCTO = gql`\n\n  mutation nuevoProducto($input: ProductoInput){\n    nuevoProducto(input: $input){\n      id\n      nombre\n      precio\n      stock\n    }\n  }\n\n`;\n\nexport const ELIMINAR_PRODUCTO = gql`\n\n  mutation eliminarProducto($id: ID){\n    eliminarProducto(id: $id)\n  }\n\n`;\n\nexport const ACTUALIZAR_PRODUCTO = gql`\n\nmutation actualizarProducto($input: ProductoInput){\n  actualizarProducto(input: $input){\n    nombre\n    precio\n    stock\n  }\n}  \n`;","import React, { Component } from 'react';\n\nclass Paginador extends Component {\n\t\n\tstate={\n        paginador: {\n            paginas: Math.ceil(Number(this.props.total) / this.props.limite)\n        }\n\t}\n\n\n    render() {\n\n\n    //BTN Anterior    -------------------------------------------------\n\t\t\n        const {actual} = this.props;\n\n\t\tconst btnAnterior = ( actual > 1) ? <button \n\t\t\tclassName=\"btn btn-success mr-2\"\n            onClick={this.props.paginaAnt}\n\t\t> &laquo; Anterior </button> : '';\n\n    //-----------------------------------------------------------------\n\n    //btn Sig       -------------------------------------------\n        \n        const { paginas } = this.state.paginador;\n        \n        const btnSig = (actual !== paginas ) ? \n        \n        <button className=\"btn btn-success ml-2\" onClick={this.props.paginaSig}\n        >   Siguiente &raquo; </button>: '';\n    //-------------------------------------------------------------------\n\n\n        return (\n        \t<div \n        \tclassName=\" mt-5 d-flex justify-content-center mb-5 \"\n        \t>\n        \t\t{btnAnterior}\n                {btnSig}\n        \t</div>    \n        );\n    }\n}\n\nexport default Paginador;\n","import React from 'react'\n\nconst Exito = ({ mensaje }) => {\n    return (\n        \n\t\t<p className=\"alert alert-success py-3 text-center my-3\">{ mensaje }</p>\n\n    );\n};\n\n\nexport default Exito;\n","import React from 'react'\n\nexport class Spiner extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t\t<div className=\"sk-cube-grid\">\n\t\t\t\t  <div className=\"sk-cube sk-cube1\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube2\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube3\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube4\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube5\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube6\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube7\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube8\"></div>\n\t\t\t\t  <div className=\"sk-cube sk-cube9\"></div>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Spiner","import React, { Fragment, Component } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { CLIENTES_QUERY } from \"../../querys/index.js\";\nimport { Link } from \"react-router-dom\";\nimport { ELIMINAR_CLIENTE } from \"../../mutations/index.js\";\nimport Paginador from \"../layaut/Paginador.jsx\";\nimport Exito from '../alertas/Exito.jsx';\nimport Spiner from '../layaut/Spiner.jsx';\n\nclass Clientes extends Component {\n  limite = 3;\n\n  state = {\n    paginador: {\n      offset: 0,\n      actual: 1\n    },\n    alerta:{\n      mostrar: false,\n      mensaje: ''\n    }\n  };\n\n  paginaAnt = () => {\n    this.setState({\n      paginador: {\n        offset: this.state.paginador.offset - this.limite,\n        actual: this.state.paginador.actual - 1\n      }\n    });\n  };\n  paginaSig = () => {\n    this.setState({\n      paginador: {\n        offset: this.state.paginador.offset + this.limite,\n        actual: this.state.paginador.actual + 1\n      }\n    });\n  };\n\n  render() {\n\n    const { alerta: { mostrar, mensaje } } = this.state;\n    const alerta = (mostrar) ? <Exito mensaje= { mensaje }/> : '';\n\n    return (\n      //Consulting DB\n      <Query\n        query={CLIENTES_QUERY}\n        pollInterval={500}\n        variables={{ limite: this.limite, offset: this.state.paginador.offset }}\n      >\n        {({ loading, error, data, startPolling, stopPolling }) => {\n          //Consulting\n          if (loading) return <Spiner/>;\n          //Error Message\n          if (error) return `Error: ${error.message}`;\n          //Show Data'sf\n          //console.log(data.totalClientes)\n          return (\n            <Fragment>\n              <h2 className=\"text-center\">Listado de Clientes</h2>\n              {alerta}\n              <ul className=\"list-group mt-4\">\n                {data.getClientes.map(item => {\n                  const { id } = item;\n                  return (\n                    <li key={item.id} className=\"list-group-item mt-4\">\n                      <div className=\"row justify-content-between align-items-center\">\n                        <div className=\"col-md-8 d-flex justify-content-between align-items-center\">\n                          {item.nombre} {item.apellido} - {item.empresa}\n                        </div>\n                        <div className=\"col-md-4 d-flex justify-content-end\">\n                          <Link \n                          to={`/pedidos/nuevo/${id}`}\n                          className=\"btn btn-warning d-block d-md-inline-block mr-2 text-center\"\n\n                          >\n                            &#43; Nuevo Pedido\n                          </Link>\n                          <Mutation \n                            mutation={ELIMINAR_CLIENTE}\n                            onCompleted= {(data) => {\n                              this.setState({\n                                alerta: {\n                                  mostrar: true,\n                                  mensaje: data.eliminarCliente\n                                }\n                              })\n                            }}\n                            >\n                            {eliminarCliente => (\n                              <button\n                                className=\"btn btn-danger d-block d-md-inline-block\"\n                                onClick={() => {\n                                  if (\n                                    window.confirm(\n                                      `Seguro que desea eliminar el Cliente: ${item.nombre +\n                                        \" - \" +\n                                        item.apellido}`\n                                    )\n                                  ) {\n                                    eliminarCliente({\n                                      variables: { id }\n                                    });\n                                  }\n                                }}\n                              >\n                                &times; Eliminar\n                              </button>\n                            )}\n                          </Mutation>\n                          <Link\n                            to={`/clientes/editar/${item.id}`}\n                            className=\"btn btn-success d-block d-md-inline-block ml-2\"\n                          >\n                            Editar Cliente\n                          </Link>\n                        </div>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n              <Paginador\n                actual={this.state.paginador.actual}\n                total={data.totalClientes}\n                limite={this.limite}\n                paginaAnt={this.paginaAnt}\n                paginaSig={this.paginaSig}\n              />\n            </Fragment>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Clientes;\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { ACTUALIZAR_CLIENTE } from \"../../mutations/index.js\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FormEditClient extends Component {\n  state = {\n    client: this.props.client,\n    emails: this.props.client.emails\n  };\n\n  nuevoCampo = () => {\n    this.setState({\n      emails: this.state.emails.concat([{ email: \"\" }])\n    });\n  };\n\n  leerCampo = i => e => {\n    const nuevoMail = this.state.emails.map((email, index) => {\n      if (i !== index) return email;\n      return { ...email, email: e.target.value };\n    });\n    this.setState({ emails: nuevoMail });\n  };\n\n  quitarCampo = i => () => {\n    this.setState({\n      emails: this.state.emails.filter((s, index) => i !== index)\n    });\n  };\n\n  render() {\n    const { nombre, apellido, edad, empresa, tipo } = this.state.client;\n\n    const { emails } = this.state;\n\n    return (\n      <Mutation\n        mutation={ACTUALIZAR_CLIENTE}\n        onCompleted={() =>\n          this.props.refetch().then(() => {\n            this.props.history.push(\"/clientes\");\n          })\n        }\n      >\n        {actualizarCliente => (\n          <form\n            className=\"col-md-8 m-3\"\n            onSubmit={e => {\n              e.preventDefault();\n              const {\n                id,\n                nombre,\n                apellido,\n                edad,\n                empresa,\n                tipo\n              } = this.state.client;\n              const { emails } = this.state;\n              const input = {\n                id,\n                nombre,\n                apellido,\n                edad: Number(edad),\n                empresa,\n                tipo,\n                emails\n              };\n              //console.log(input);\n\n              actualizarCliente({\n                variables: { input }\n              });\n            }}\n          >\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label>Nombre</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  defaultValue={nombre}\n                  onChange={e => {\n                    this.setState({\n                      client: {\n                        ...this.state.client,\n                        nombre: e.target.value\n                      }\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label>Apellido</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  defaultValue={apellido}\n                  onChange={e => {\n                    this.setState({\n                      client: {\n                        ...this.state.client,\n                        apellido: e.target.value\n                      }\n                    });\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-12\">\n                <label>Empresa</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  defaultValue={empresa}\n                  onChange={e => {\n                    this.setState({\n                      client: {\n                        ...this.state.client,\n                        empresa: e.target.value\n                      }\n                    });\n                  }}\n                />\n              </div>\n\n              {emails.map((input, index) => (\n                <div key={index} className=\"form-group col-md-12\">\n                  <label>Email {index + 1} : </label>\n                  <div className=\"input-group\">\n                    <input\n                      type=\"email\"\n                      placeholder={`Email`}\n                      className=\"form-control\"\n                      onChange={this.leerCampo(index)}\n                      defaultValue={input.email}\n                    />\n                    <div className=\"input-group-append\">\n                      <button\n                        className=\"btn btn-danger\"\n                        type=\"button\"\n                        onClick={this.quitarCampo(index)}\n                      >\n                        &times; Eliminar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              <div className=\"form-group d-flex justify-content-center col-md-12\">\n                <button\n                  onClick={this.nuevoCampo}\n                  type=\"button\"\n                  className=\"btn btn-warning\"\n                >\n                  + Agregar Email\n                </button>\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-md-6\">\n                <label>Edad</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  defaultValue={edad}\n                  onChange={e => {\n                    this.setState({\n                      client: {\n                        ...this.state.client,\n                        edad: e.target.value\n                      }\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"form-group col-md-6\">\n                <label>Tipo Cliente</label>\n                <select\n                  className=\"form-control\"\n                  defaultValue={tipo}\n                  onChange={e => {\n                    this.setState({\n                      client: {\n                        ...this.state.client,\n                        tipo: e.target.value\n                      }\n                    });\n                  }}\n                >\n                  <option value=\"\">Elegir...</option>\n                  <option value=\"PREMIUM\">PREMIUM</option>\n                  <option value=\"BASICO\">BÁSICO</option>\n                </select>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-success float-right\">\n              Guardar Cambios\n            </button>\n          </form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default withRouter(FormEditClient);\n","import React, { Component, Fragment } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { CLIENTE_QUERY } from \"../../querys/index.js\";\n\nimport FormEditClient from \"./FormEditClient.jsx\";\n\nclass EditCliente extends Component {\n  render() {\n    const { id } = this.props.match.params;\n    return (\n      <Fragment>\n        <h2 className=\"text-center\">Editar Cliente</h2>\n        <div className=\"row justify-content-center\">\n          <Query query={CLIENTE_QUERY} variables={{ id }}>\n            {({ loading, error, data, refetch }) => {\n              if (loading) return \"Cargando...\";\n              if (error) return `Error: ${error.message}`;\n              return (\n                <FormEditClient client={data.getCliente} refetch={refetch} />\n              );\n            }}\n          </Query>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default EditCliente;\n","import React, { Component, Fragment } from \"react\";\n\nimport { NUEVO_CLIENTE } from \"../../mutations/index.js\";\nimport { Mutation } from \"react-apollo\";\n\nclass NuevoCliente extends Component {\n  state = {\n    cliente: {\n      nombre: \"\",\n      apellido: \"\",\n      empresa: \"\",\n      edad: \"\",\n      email: \"\",\n      tipo: \"\"\n    },\n    error: false,\n    emails: []\n  };\n\n  NewCamp = () => {\n    this.setState({\n      emails: this.state.emails.concat([{ email: \"\" }])\n    });\n  };\n\n  DelCamp = i => () => {\n    this.setState({\n      emails: this.state.emails.filter((email, index) => i !== index)\n    });\n  };\n\n  ReadCamp = i => e => {\n    const NewEmail = this.state.emails.map((email, index) => {\n      if (i !== index) return email;\n      return {\n        ...email,\n        email: e.target.value\n      };\n    });\n\n    this.setState({\n      emails: NewEmail\n    });\n  };\n\n  render() {\n    const { error } = this.state;\n    const res = error ? (\n      <p className=\"alert alert-danger p-3 text-center\">\n        Todos los campos son obligatorios\n      </p>\n    ) : (\n      ''\n    );\n    return (\n      <Fragment>\n        <h2 className=\"text-center\">Nuevo Cliente</h2>\n        {res}\n        <Mutation\n          mutation={NUEVO_CLIENTE}\n          onCompleted={() => {\n            this.props.history.push(\"/clientes\");\n          }}\n        >\n          {crearCliente => (\n            <div className=\"justify-content-center d-flex\">\n              <form\n                className=\"col-md-8 m-3 justify-content-center\"\n                onSubmit={e => {\n                  e.preventDefault();\n\n                  const {\n                    nombre,\n                    apellido,\n                    empresa,\n                    edad,\n                    tipo\n                  } = this.state.cliente;\n\n                  const { emails } = this.state;\n\n                  const input = {\n                    nombre,\n                    apellido,\n                    empresa,\n                    edad: Number(edad),\n                    emails,\n                    tipo\n                  };\n\n                  if (\n                    nombre.trim() === \"\" ||\n                    apellido.trim() === \"\" ||\n                    empresa.trim() === \"\" ||\n                    edad.trim() === \"\" ||\n                    tipo.trim()=== \"\"\n                  ) {\n                    this.setState({\n                      error: true\n                    });\n                    return;\n                  }\n                  this.setState({\n                    error: false\n                  });\n\n                  crearCliente({\n                    variables: { input }\n                  });\n                }}\n              >\n                <div className=\"form-row\">\n                  <div className=\"form-group col-md-6\">\n                    <label>Nombre</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Nombre\"\n                      onChange={e => {\n                        this.setState({\n                          cliente: {\n                            ...this.state.cliente,\n                            nombre: e.target.value\n                          }\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <label>Apellido</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Apellido\"\n                      onChange={e => {\n                        this.setState({\n                          cliente: {\n                            ...this.state.cliente,\n                            apellido: e.target.value\n                          }\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group col-md-12\">\n                    <label>Empresa</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Empresa\"\n                      onChange={e => {\n                        this.setState({\n                          cliente: {\n                            ...this.state.cliente,\n                            empresa: e.target.value\n                          }\n                        });\n                      }}\n                    />\n                  </div>\n                  {this.state.emails.map((input, index) => (\n                    <div key={index} className=\"form-group col-md-12 \">\n                      <label>Correo {index + 1}: </label>\n                      <div className=\"input-group\">\n                        <input\n                          type=\"email\"\n                          placeholder=\"Ingresa tu Email\"\n                          className=\"form-control\"\n                          onChange={this.ReadCamp(index)}\n                        />\n                        <div className=\"input-group-append\">\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={this.DelCamp(index)}\n                          >\n                            &times; Eliminar{\" \"}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"form-group d-flex justify-content-center col-md-12\">\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                      onClick={this.NewCamp}\n                    >\n                      Agregar Email\n                    </button>\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group col-md-6\">\n                    <label>Edad</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Edad\"\n                      onChange={e => {\n                        this.setState({\n                          cliente: {\n                            ...this.state.cliente,\n                            edad: e.target.value\n                          }\n                        });\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <label>Tipo Cliente</label>\n                    <select\n                      className=\"form-control\"\n                      onChange={e => {\n                        this.setState({\n                          cliente: {\n                            ...this.state.cliente,\n                            tipo: e.target.value\n                          }\n                        });\n                      }}\n                    >\n                      <option value=\"\">Elegir...</option>\n                      <option value=\"PREMIUM\">PREMIUM</option>\n                      <option value=\"BASICO\">BÁSICO</option>\n                    </select>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-success float-right\">\n                  Agrgar Cliente\n                </button>\n              </form>\n            </div>\n          )}\n        </Mutation>\n      </Fragment>\n    );\n  }\n}\n\nexport default NuevoCliente;\n","import React, { Component, Fragment } from 'react';\nimport { Mutation } from 'react-apollo';\n\nimport { NUEVO_PRODUCTO } from '../../mutations/index.js';\n\nconst initialState = {\n    nombre: '',\n    precio: '',\n    stock: ''\n\n};\n\nclass NuevoProducto extends Component {\n\n    state={\n        ...initialState    \n    }\n\n    cleanState = () => {\n        this.setState({\n            ...initialState\n        });\n    }\n\n    actualizarState = e =>{\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n    validForm = () =>{\n        const { nombre, precio, stock } = this.state;\n        const noValid = !nombre.trim() || !precio || !stock;\n\n        return noValid;\n    }\n\n    crearProducto = ( e, NuevoProducto ) => {\n        e.preventDefault();\n\n    // Insert To Data Base\n        NuevoProducto().then(data =>{\n        //console.log(data)\n            this.cleanState();\n            this.props.history.push('/productos');\n        });\n\n    }\n\n    render() {\n    \n        const { nombre, precio, stock } = this.state;\n        const input = {\n            nombre,\n            precio: Number(precio),\n            stock: Number(stock)\n        };\n\n        return (\n            <Fragment>\n                <h1 className=\"text-center mb-5\">NuevoProducto</h1>\n                <div className=\"row justify-content-center\">\n                    <Mutation \n                        mutation={ NUEVO_PRODUCTO }\n                        variables= {{input}}\n                    >\n                    {(NuevoProducto, { loading, error, data })=>{\n                        return (\n                            <form \n                                className=\"col-md-8\"\n                                onSubmit = { e => this.crearProducto( e, NuevoProducto ) }\n                              >\n                                <div className=\"form-group\">\n                                    <label>Nombre:</label>\n                                    <input \n                                        type=\"text\"\n                                        name=\"nombre\" \n                                        className=\"form-control\" \n                                        placeholder=\"Nombre del Producto\"\n                                        autoComplete= \"off\"\n                                        onChange= {this.actualizarState}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Precio:</label>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <div className=\"input-group-text\">$</div>\n                                        </div>\n                                        <input \n                                            type=\"number\" \n                                            name=\"precio\" \n                                            className=\"form-control\" \n                                            placeholder=\"Precio del Producto\"\n                                            onChange= {this.actualizarState}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Stock:</label>\n                                    <input \n                                        type=\"number\" \n                                        name=\"stock\" \n                                        className=\"form-control\" \n                                        placeholder=\"stock del Producto\" \n                                        onChange= {this.actualizarState}\n                                    />\n                                </div>\n                                <button \n                                    \n                                    disabled= {this.validForm()}\n\n                                    type=\"submit\" \n                                    className=\"btn btn-success float-right\">\n                                        Crear Producto\n                                </button>\n                            </form>\n                        );\n                    }}\n                    </Mutation>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default NuevoProducto;","import React, { Component, Fragment } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n\nimport { PRODUCTOS_QUERY } from '../../querys/index.js';\nimport { ELIMINAR_PRODUCTO } from '../../mutations/index.js';\n\nimport Exito from '../alertas/Exito.jsx';\nimport Paginador from '../layaut/Paginador.jsx';\n\nclass Productos extends Component {\n\tlimite=3;\n\n\tstate={\n\t\talerta: {\n\t\t\tmostrar: false,\n\t\t\tmensaje: ''\n\t\t},\n\t\tpaginador: {\n\t\t  offset: 0,\n\t\t  actual: 1\n\t\t}\n\t}\n\n\tpaginaAnt = () => {\n\tthis.setState({\n\t  paginador: {\n\t    offset: this.state.paginador.offset - this.limite,\n\t    actual: this.state.paginador.actual - 1\n\t  }\n\t});\n\t};\n\tpaginaSig = () => {\n\tthis.setState({\n\t  paginador: {\n\t    offset: this.state.paginador.offset + this.limite,\n\t    actual: this.state.paginador.actual + 1\n\t  }\n\t});\n\t};\n\n    render() {\n\n\t\tconst { alerta: {mostrar,mensaje} } = this.state;\n\n\t\tconst alerta = (mostrar) ? <Exito mensaje={mensaje} /> : '';\n\n        return (\n            <Fragment>\n            \t<h1 className=\"text-center mb-5\"> Productos </h1>\n            \t{alerta}\n\t\t\t\t<Query\n\t\t\t\t\tquery={ PRODUCTOS_QUERY }\n\t\t\t\t\tpollInterval={500}\n\t\t\t\t\tvariables={{ limite: this.limite, offset: this.state.paginador.offset }}\n\t\t\t\t>\n\t\t\t\t{({ loading, error, data, startPolling, stopPolling })=>{\n\t\t\t\t\tif(loading) return \"CARGANDO...\";\n\t\t\t\t\tif(error) return `Error: ${error.message}`;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<table className=\"table\">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr className=\"table-primary\">\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"> Nombre </th>\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"> Precio </th>\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"> Existentes </th>\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"> Eliminar </th>\n\t\t\t\t\t\t\t\t\t\t<th scope=\"col\"> Editar </th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{data.getProductos.map(item =>{\n\t\t\t\t\t\t\t\t\t\tconst {id} = item;\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.nombre}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.precio}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{item.stock}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t<Mutation\n\t\t\t\t\t\t\t\t\t\t\t\t\tmutation={ ELIMINAR_PRODUCTO }\n\t\t\t\t\t\t\t\t\t\t\t\t\tonCompleted={ (data) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//console.log(data)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talerta: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmostrar: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmensaje: data.eliminarProducto\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t{eliminarProducto =>(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(window.confirm(`Esta Seguro de Eliminar el Producto: ${item.nombre}`))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{eliminarProducto({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariables: {id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&times; Eliminar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t</Mutation>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/productos/editar/${id}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t<Paginador\n\t\t\t\t\t\t\tactual={this.state.paginador.actual}\n\t\t\t\t\t\t\ttotal={data.totalProductos}\n\t\t\t\t\t\t\tlimite={this.limite}\n\t\t\t\t\t\t\tpaginaAnt={this.paginaAnt}\n\t\t\t\t\t\t\tpaginaSig={this.paginaSig}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t}}\n\n\t\t\t\t</Query>\n            </Fragment>\n        );\n    }\n}\n\nexport default Productos;\n","import React, { Component} from 'react';\nimport { Mutation } from 'react-apollo';\nimport { withRouter } from \"react-router-dom\";\nimport { ACTUALIZAR_PRODUCTO } from '../../mutations/index.js';\n\nconst initialState = {\n    nombre: '',\n    precio: '',\n    stock: ''\n\n};\n\nclass FormEditProducts extends Component {\n    \n    state={\n        ...this.props.data.getProducto  \n    }\n\n    cleanState = () => {\n        this.setState({\n            ...initialState\n        });\n    }\n\n    actualizarState = e =>{\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n\n    validForm = () =>{\n        const { nombre, precio, stock } = this.state;\n        const noValid = !nombre.trim() || !precio || !stock;\n\n        return noValid;\n    }\n\n    editarProductoForm = ( e, actualizarProducto ) =>{\n\n        e.preventDefault();\n        actualizarProducto().then(data =>{\n            this.setState({\n                ...initialState\n            })\n            this.props.refetch().then( ()=>\n            this.props.history.push('/productos')\n            )\n        })\n    }\n\n    render() {\n\n        const { nombre, precio, stock } = this.state;\n        const { id } = this.props;\n        const input = {\n            id,\n            nombre,\n            precio: Number(precio),\n            stock: Number(stock)\n        };\n\n\n        return (\n            <Mutation \n                mutation={ACTUALIZAR_PRODUCTO}\n                variables={{input}}\n                key={id}\n                \n            >\n            {( actualizarProducto, {loading, error, data} ) =>{\n\n                //console.log(data)\n                return (\n\n                    <form \n                        className=\"col-md-8\" \n                        onSubmit={ e => this.editarProductoForm( e, actualizarProducto)}\n                        >\n                        <div className=\"form-group\">\n                            <label>Nombre:</label>\n                            <input \n                                onChange={this.actualizarState}\n                                type=\"text\"\n                                name=\"nombre\" \n                                className=\"form-control\" \n                                placeholder=\"Nombre del Producto\"\n                                autoComplete= \"off\"\n                                value={nombre}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Precio:</label>\n                            <div className=\"input-group\">\n                                <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\">$</div>\n                                </div>\n                                <input \n                                    onChange={this.actualizarState}\n                                    type=\"number\" \n                                    name=\"precio\" \n                                    className=\"form-control\" \n                                    placeholder=\"Precio del Producto\"\n                                    value={ precio }\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Stock:</label>\n                            <input \n                                onChange={this.actualizarState}\n                                type=\"number\" \n                                name=\"stock\" \n                                className=\"form-control\" \n                                placeholder=\"stock del Producto\" \n                                value={ stock }\n                            />\n                        </div>\n                        <button \n                            disabled={ this.validForm() }\n                            type=\"submit\" \n                            className=\"btn btn-success float-right\">\n                                    Guardar Cambios\n                        </button>\n                    </form>\n                );\n            }}\n            </Mutation>\n        );\n    }\n}\n\nexport default withRouter(FormEditProducts);","import React, { Component, Fragment} from 'react';\n\nimport { PRODUCTO_QUERY } from '../../querys/index.js';\nimport { Query } from 'react-apollo';\n\nimport FormEditProducts from './FormEditProducts.jsx';\n\nclass EditProducto extends Component {\n\n\n    render() {\n        \n        const {id} = this.props.match.params;\n\n        return (\n            <Fragment>\n               <h1 className=\"text-center\">Editar Producto</h1>\n               <div className= \"row justify-content-center\">\n                   <Query \n                    query={ PRODUCTO_QUERY } \n                    variables= {{ id }}>\n                       {({ loading, error, data, refetch }) => {\n                            if(loading) return 'Cargando...';\n                            if(error) return `Error: ${error.message}`;\n                            return(\n                                <FormEditProducts \n                                    data= {data}\n                                    refetch= {refetch} \n                                    id= { id }/>\n                                );\n                       }}\n                   </Query>\n               </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default EditProducto;\n","import React, { Fragment } from 'react'\nimport { Query } from 'react-apollo'\nimport { CLIENTE_QUERY } from '../../querys/index.js'\nfunction DatosCliente({ id }) {\n\treturn (\n\t\t<Fragment>\n\t\t\t<h2 className=\"mb-3 text-center\">Data</h2>\n\t\t\t<Query \n\t\t\t\tquery={ CLIENTE_QUERY } \n\t\t\t\tvariables={{id}}\n\t\t\t\tpollInterval={500}>\n\t\t\t\t{({loading,error,data, startPolling, stopPolling}) => {\n\t\t\t\t\t\tif(loading) return \"Cargando...\";\n\t\t\t\t\t\tif(error) return`Error: ${error.message}`;\n\t\t\t\t\t\tconst { nombre, apellido, edad, emails, empresa, tipo } = data.getCliente;\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<ul className=\"list-unstyled my-5 list-group\">\n\t\t\t\t\t\t\t\t<li className=\"border font-weight-bold p-2 list-group-item\">Nombre: \n\t\t\t\t\t\t\t\t\t<span className=\"font-weight-normal\">{nombre}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"border font-weight-bold p-2 list-group-item\"> Apellido: \n\t\t\t\t\t\t\t\t\t<span className=\"font-weight-normal\">{apellido}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"border font-weight-bold p-2 list-group-item\"> Edad: \n\t\t\t\t\t\t\t\t\t<span className=\"font-weight-normal\">{edad}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"border font-weight-bold p-2 list-group-item\">\n\t\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\t\ttype=\"button\" \n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary d-block d-md-inline-block mr-2 text-center\" \n\t\t\t\t\t\t\t\t\t\tdata-toggle=\"modal\" \n\t\t\t\t\t\t\t\t\t\tdata-target=\"#VerEmails\">\n\t\t\t\t\t\t\t\t\t\tVer Emails\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<div className=\"modal fade\" id=\"VerEmails\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalScrollableTitle\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t\t\t  <div className=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n\t\t\t\t\t\t\t\t\t    <div className=\"modal-content\">\n\t\t\t\t\t\t\t\t\t      <div className=\"modal-header\">\n\t\t\t\t\t\t\t\t\t        <h5 className=\"modal-title\" id=\"exampleModalScrollableTitle\">Emails de: {nombre}</h5>\n\t\t\t\t\t\t\t\t\t        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t\t\t\t\t\t\t          <span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t\t\t\t        </button>\n\t\t\t\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t\t\t\t      <div className=\"modal-body\">\n\t\t\t\t\t\t\t\t\t        {emails.map(email => <h5 key={id}>{email.email}</h5>)}\n\t\t\t\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t\t\t\t      <div className=\"modal-footer\">\n\t\t\t\t\t\t\t\t\t        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n\t\t\t\t\t\t\t\t\t      </div>\n\t\t\t\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"border font-weight-bold p-2 list-group-item\"> Empresa: \n\t\t\t\t\t\t\t\t\t<span className=\"font-weight-normal\">{empresa}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"border font-weight-bold p-2 list-group-item\"> tipo: \n\t\t\t\t\t\t\t\t\t<span className=\"font-weight-normal\">{tipo}</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t</Query>\n\t\t</Fragment>\n\t)\n}\n\nexport default DatosCliente","import React, { Fragment } from 'react'\n\nexport class Producto extends React.Component {\n\trender() {\n\t\tconst {producto} = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{producto.nombre}</td>\n\t\t\t\t\t<td>{producto.precio}</td>\n\t\t\t\t\t<td>{producto.stock}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tonChange={e => this.props.actualizarCant(e.target.value, this.props.index) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-danger font-weight-bold\"\n\t\t\t\t\t\t\t>&times; Eliminar</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default Producto","import React,{ Fragment } from 'react';\nimport Producto from './Producto.jsx';\n\nfunction Resumen(props) {\n\tconst productos = props.productos;\n\tif (productos.length === 0) return null;\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"text-center mb-5 mt-5\">Resumen</h1>\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead className=\"bg-success text-light\">\n\t\t\t\t\t<tr className=\"font-weight-bold\">\n\t\t\t\t\t\t<th>Producto</th>\n\t\t\t\t\t\t<th>Precio</th>\n\t\t\t\t\t\t<th>Inventario</th>\n\t\t\t\t\t\t<th>Cantidad</th>\n\t\t\t\t\t\t<th>Eliminar</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{productos.map((producto, index) => (\n\t\t\t\t\t\t<Producto\n\t\t\t\t\t\tkey={producto.id}\n\t\t\t\t\t\tid={producto.id}\n\t\t\t\t\t\tproducto={producto}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\tactualizarCant={props.actualizarCant}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</Fragment>\n\t)\n}\n\nexport default Resumen","import React,{ Component, Fragment } from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\n\nimport Resumen from './Resumen.jsx';\n\nexport class ContentPedidos extends Component {\n\n\tstate={\n\t\tproducts: [],\n\t\ttotal: 0\n\t}\n\n\tselectProducto = (products) =>{\n\t\t\n\t\tthis.setState({\n\t\t\tproducts\n\t\t});\n\n\t\t//console.log(products);\n\t}\n\n\tactualizarCant = (cant, index) =>{\n\n\t\tlet newTotal = 0;\n\n\t\tconst products = this.state.products;\n\n\t\tif (products.length === 0){\n\t\t\tthis.setState({\n\t\t\t\ttotal: newTotal\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tproducts[index].cant = Number(cant);\n\n\t\tconsole.log(products)\n\n\t\tthis.setState({\n\t\t\tproducts\n\t\t})\n\t}\n\n\trender() {\n\t\tconst op = this.props.datas.getProductos;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h2 className=\"text-center mb-5\">Seleccionar Articulos</h2>\n\t\t\t\t<Select \n\t\t\t\t\tonChange={this.selectProducto}\n\t\t\t\t\toptions={op}\n\t\t\t\t\tisMulti={true}\n\t\t\t\t\tcomponents={makeAnimated()}\n\t\t\t\t\tplaceholder={\"Seleccionar Productos\"}\n\t\t\t\t\tgetOptionValue={(options) => options.id}\n\t\t\t\t\tgetOptionLabel={(options) => options.nombre}\n\t\t\t\t/>\n\t\t\t\t<Resumen\n\t\t\t\t\tproductos={this.state.products}\n\t\t\t\t\tactualizarCant={this.actualizarCant}\n\t\t\t\t/>\n\t\t\t\t<p className=\"fotn-weight-bold float-right mt-3\">\n\t\t\t\t\tTotal:\n\t\t\t\t\t<span className=\"fotn-weight-normal\">\n\t\t\t\t\t\t$ {this.state.total}\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default ContentPedidos","import React, { Component, Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport { PRODUCTOS_QUERY } from '../../querys'\n\nimport DatosCliente from './DatosCliente.jsx';\nimport ContentPedidos from './ContentPedidos.jsx';\nimport Spiner from '../layaut/Spiner.jsx';\n\n\t\t\t\t\t\t\nexport class NuevoPedido extends Component {\n\trender() {\n\t\tconst { id } = this.props.match.params;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h1 className=\"text-center mb-5\">Nuevo Pedido</h1>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-3\">\n\t\t\t\t\t\t<DatosCliente\n\t\t\t\t\t\t\tid={ id }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-md-9\">\n\t\t\t\t\t\t<Query \n\t\t\t\t\t\t\tquery={PRODUCTOS_QUERY}>\n\t\t\t\t\t\t\t{({ loading, error, data }) =>{\n\t\t\t\t\t\t\t\tif(loading) return <Spiner/>;\n\t\t\t\t\t\t\t\tif(error) return `Error: ${error.message}`;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconsole.log(data)\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<ContentPedidos\n\t\t\t\t\t\t\t\t\t\tdatas={data}\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\t\t\t\t\t\n\t\t\t\t\t\t</Query>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default NuevoPedido","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n//Clientes\nimport Header from \"./layaut/Header.jsx\";\nimport Clientes from \"./clientes/Clientes.jsx\";\nimport EditCliente from './clientes/EditCliente.jsx';\nimport NuevoCliente from \"./clientes/NuevoCliente.jsx\";\n\n//Productos\nimport NuevoProducto from './productos/NuevoProducto.jsx';\nimport Productos from './productos/Productos.jsx';\nimport EditProducto from './productos/EditProducto.jsx';\n\n//Pedidos\nimport NuevoPedido from './pedidos/NuevoPedido.jsx'\n\nclass Routes extends Component {\n  render() {\n    return (\n      <Router>\n        <Fragment>\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              \n              <Route exact path=\"/clientes\" component={Clientes} />\n              <Route exact path=\"/clientes/nuevo\" component={NuevoCliente} />\n              <Route exact path=\"/clientes/editar/:id\" component={EditCliente} />\n              \n              <Route exact path= \"/productos\" component={Productos}/>\n              <Route exact path=\"/productos/nuevo\" component={NuevoProducto}/>\n              <Route exact path= \"/productos/editar/:id\" component={EditProducto}/>\n              \n              <Route exact path= \"/pedidos/nuevo/:id\" component={NuevoPedido} />\n            </Switch>\n          </div>\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\n\nimport Routes from \"./components/Routes.jsx\";\n\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient,{ InMemoryCache} from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://0c06c9d2.ngrok.io/graphql\",\n  cache: new InMemoryCache({\n    addTypename:false\n  }),\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log(\"Errors gql: \", graphQLErrors);\n    console.log(\"Errors NetWork: \", networkError);\n  }\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Routes />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './min.css';\nimport './index.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}